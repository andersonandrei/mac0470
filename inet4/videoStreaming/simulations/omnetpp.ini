[General]
tkenv-plugin-path = ../../../etc/plugins
network = Net
#-------------------------------------------------------------------------------------
#-----------------------------------------General-------------------------------------
#-------------------------------------------------------------------------------------
[Config Base-simulation]
## Ideal simulation time: 420s (7min) [For real simulations]
sim-time-limit = 90s
repeat = 10
#*.numHosts = ${50,100,150}
*.numHosts = 50

# channel physical parameters
**.wlan[*].typename = "AckingWirelessInterface"
**.wlan[*].bitrate = 1Mbps
#**.wlan[*].mac.address = "auto"
**.wlan[*].mac.headerLength = 20B
**.wlan[*].radioType = "UnitDiskRadio"
**.wlan[*].radio.transmitter.headerLength = 96b
**.wlan[*].radio.transmitter.communicationRange = 200m
**.wlan[*].radio.transmitter.interferenceRange = 0m
**.wlan[*].radio.transmitter.detectionRange = 0m
**.wlan[*].radio.receiver.ignoreInterference = true
**.wlan[*].radio.displayInterferenceRange = true
#**.wlan[*].radio.displayCommunicationRange = true
#*.host*.wlan[0].macType = "CsmaCaMac"
*.host*.wlan[*].mac.useAck = true

# nic settings
**.wlan[*].bitrate = 2Mbps
**.wlan[*].mgmt.frameCapacity = 10
**.wlan[*].mac.address = "auto"
**.wlan[*].mac.maxQueueSize = 14
**.wlan[*].mac.rtsThresholdBytes = 3000B
**.wlan[*].mac.retryLimit = 7
**.wlan[*].mac.cwMinData = 7
**.wlan[*].mac.cwMinMulticast = 31

# AODV
*.host*.forwarding = true
#*.host*.routingTable.netmaskRoutes = ""
*.configurator.config = xml("<config><interface hosts='**' address='10.0.0.x' netmask='255.255.255.0'/><autoroute metric='errorRate'/></config>")
*.configurator.optimizeRoutes = false
*.configurator.addStaticRoutes = false
*.hostType = "AodvRouter"
*.hostB.wlan[0].radio.displayCommunicationRange = true
*.hostA.wlan[0].radio.displayCommunicationRange = true
*.visualizer.dataLinkVisualizer.packetFilter = "AODV*"

# Mobility
*.host*.mobilityType = "MassMobility"
**.host*.mobility.speed = ${normal(3mps, 0.5mps), normal(6mps, 0.5mps)}
**.host*.mobility.changeAngleBy = normal(0deg, 30deg)
**.host*.mobility.changeInterval = normal(5s, 0.1s)

**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.constraintAreaMinX = 0m
**.mobility.constraintAreaMinY = 0m
**.mobility.constraintAreaMaxX = 1000m
**.mobility.constraintAreaMaxY = 700m

#-------------------------------------------------------------------------------------
#------------------------------------------UDP----------------------------------------
#-------------------------------------------------------------------------------------

[Config WirelessUDP]
extends = Base-simulation

#Server
*.hostA.numApps = 1
*.hostA.app[0].typename = "UdpVideoStreamServer"
*.hostA.app[0].localPort = 5001
*.hostA.app[0].sendInterval = 1s
*.hostA.app[0].packetLen = 60KiB
*.hostA.app[0].videoSize = 20MiB

#Host
*.hostB.numApps = 1
*.hostB.app[0].typename = "UdpVideoStreamClient"
*.hostB.app[0].serverPort = 5001
*.hostB.app[0].serverAddress = "hostA"
*.hostB.app[0].startTime = 0s

*.visualizer.networkRouteVisualizer.packetFilter = "UDPData*"
*.host*.**.bitrate = 10Mbps

#-------------------------------------------------------------------------------------
#------------------------------------------DASH---------------------------------------
#-------------------------------------------------------------------------------------

[Config WirelessDASH]
extends = Base-simulation
**.tcpType = "Tcp"

# Server
*.hostA.numApps = 1
*.hostA.app[0].typename = "TcpGenericServerApp"
*.hostA.app[0].localPort = 5001

# Host destino
*.hostB.numApps = 1
*.hostB.app[0].typename = "TcpVideoStreamCliApp"
*.hostB.app[0].connectPort = 5001
*.hostB.app[0].connectAddress = "hostA"
*.hostB.app[0].dataTransferMode = "object"
*.hostB.app[0].numRequestsPerSession = 1000
*.hostB.app[0].idleInterval = 0s
*.hostB.app[0].startTime = 0s
*.hostB.app[0].video_duration = 1000
*.hostB.app[0].thinkTime = 0s

*.host*.**.bitrate = 10Mbps

#--------------------------------------------------------------------------------------
# Visualizer
*.visualizer.physicalLinkVisualizer.packetFilter = "TCPData*"
*.visualizer.networkRouteVisualizer.packetFilter = "TCPData*"
##-----------------------------------------------------------------------------

#-------------------------------------------------------------------------------------
#------------------------------------------TCP----------------------------------------
#-------------------------------------------------------------------------------------
[Config WirelessTCP]
extends = Base-simulation
**.tcpType = "Tcp"

# Server
*.hostA.numApps = 1
*.hostA.app[0].typename = "TcpGenericServerApp"
*.hostA.app[0].localPort = 5001

# Host destino
*.hostB.numApps = 1
*.hostB.app[0].typename = "TcpVideoStreamCliApp"
*.hostB.app[0].connectAddress = "hostA"
*.hostB.app[0].dataTransferMode = "object"
*.hostB.app[0].video_current_quality_index = 0
*.hostB.app[0].idleInterval = 0s
*.hostB.app[0].thinkTime = 0s
*.hostB.app[0].stopTime = 1000s
*.hostB.app[0].numRequestsPerSession = 1000
*.hostB.app[0].video_duration = 1000
*.hostB.app[0].connectPort = 5001

*.host*.**.bitrate = 10Mbps

#--------------------------------------------------------------------------------------
# Visualizer
*.visualizer.physicalLinkVisualizer.packetFilter = "TCPData*"
*.visualizer.networkRouteVisualizer.packetFilter = "TCPData*"

#[Config Wireless01]
#description = Two hosts communicating wirelessly
#network = Net
#sim-time-limit = 90s
#
## AODV
##*.host*.forwarding = true
#
#
##*.host*.ipv4.arpType = "GlobalArp"
#*.host*.**.bitrate = 10Mbps
#
#*.hostA.numApps = 1
#*.hostA.app[0].typename = "TcpGenericServerApp"
#*.hostA.app[0].localAddress = "hostA"
#*.hostA.app[0].localPort = 5000
#
#*.hostB.numApps = 1
#
##*.hostB.app[0].numRequestsPerSession = 1 
##*.hostB.app[0].requestLength = 1B*int(truncnormal(350,20))
##*.hostB.app[0].replyLength = 1B*int(exponential(2000))
#*.hostB.app[0].typename = "TcpBasicVideoStreamCliApp"
##*.hostB.app[0].localAddress = "hostB"
##*.hostB.app[0].localPort = default(-1)
#*.hostB.app[0].connectPort = 5000
#*.hostB.app[0].connectAddress = "hostA"
#*.hostB.app[0].startTime = 0s
#*.hostB.app[0].dataTransferMode = "object"
#*.hostB.app[0].video_current_quality_index = 0
#*.hostB.app[0].idleInterval = 0s
#*.hostB.app[0].thinkTime = 0s
#*.hostB.app[0].stopTime = 1000s
#*.hostB.app[0].numRequestsPerSession = 1000
#*.hostB.app[0].video_duration = 1000
#
#*.host*.wlan[0].typename = "AckingWirelessInterface"
#*.host*.wlan[0].mac.useAck = true
#*.host*.wlan[0].mac.fullDuplex = false
#*.host*.wlan[0].radio.transmitter.communicationRange = 500m
#*.host*.wlan[0].radio.receiver.ignoreInterference = true
#
##*.host*.**.bitrate = 10Mbps
#
##-----------------------------------------------------------------------------
#[Config Wireless02]
#description = Setting up some animations
#extends = Wireless01
#
#*.hostA.wlan[0].radio.displayCommunicationRange = true
#
##*.visualizer.sceneVisualizer.descriptionFigure = "title"
#
#*.visualizer.mediumVisualizer.displaySignals = true
#
#*.visualizer.physicalLinkVisualizer.displayLinks = true
#*.visualizer.physicalLinkVisualizer.packetFilter = "UDPData*"
#
##-----------------------------------------------------------------------------
#[Config Wireless03]
#description = Adding more nodes and decreasing the communication range
#extends = Wireless02
#
#*.host*.wlan[0].radio.transmitter.communicationRange = 250m
#
#*.hostR1.wlan[0].radio.displayCommunicationRange = true
#
##-----------------------------------------------------------------------------
#[Config Wireless04]
#description = Setting up static routing
#extends = Wireless03
#
#*.host*.forwarding = true
#
#*.configurator.config = xml("<config><interface hosts='**' address='10.0.0.x' netmask='255.255.255.0'/><autoroute metric='errorRate'/></config>")
#*.configurator.optimizeRoutes = false
#*.host*.ipv4.routingTable.netmaskRoutes = ""
#
#*.visualizer.physicalLinkVisualizer.displayLinks = true
#*.visualizer.dataLinkVisualizer.displayLinks = true
#*.visualizer.networkRouteVisualizer.displayRoutes = true
#*.visualizer.*LinkVisualizer.lineShift = 0
#*.visualizer.networkRouteVisualizer.lineShift = 0
#*.visualizer.networkRouteVisualizer.packetFilter = "UDPData*"
#
##-----------------------------------------------------------------------------
#[Config Wireless05]
#description = Taking interference into account
#extends = Wireless04
#
#*.host*.wlan[0].radio.receiver.ignoreInterference = false
#*.host*.wlan[0].radio.transmitter.interferenceRange = 500m
#
#*.hostA.wlan[0].radio.displayInterferenceRange = true
#
#*.visualizer.dataLinkVisualizer.packetFilter = ""
#
##-----------------------------------------------------------------------------
#[Config Wireless06]
#description = Using CSMA to better utilize the medium
#extends = Wireless05
#
#*.host*.wlan[0].typename = "WirelessInterface"
#*.host*.wlan[0].radioType = "UnitDiskRadio"
#*.host*.wlan[0].macType = "CsmaCaMac"
#*.host*.wlan[0].mac.ackTimeout = 300us
#
##-----------------------------------------------------------------------------
#[Config Wireless07]
#description = Turning on ACKs in CSMA
#extends = Wireless06
#
#*.host*.wlan[0].mac.useAck = true
#
##-----------------------------------------------------------------------------
#[Config Wireless08]
#description = Modeling energy consumption
#extends = Wireless07
#
#*.host*.wlan[0].radio.energyConsumerType = "StateBasedEpEnergyConsumer"
#*.host*.wlan[0].radio.energyConsumer.offPowerConsumption = 0mW
#*.host*.wlan[0].radio.energyConsumer.sleepPowerConsumption = 1mW
#*.host*.wlan[0].radio.energyConsumer.switchingPowerConsumption = 1mW
#*.host*.wlan[0].radio.energyConsumer.receiverIdlePowerConsumption = 2mW
#*.host*.wlan[0].radio.energyConsumer.receiverBusyPowerConsumption = 5mW
#*.host*.wlan[0].radio.energyConsumer.receiverReceivingPowerConsumption = 10mW
#*.host*.wlan[0].radio.energyConsumer.transmitterIdlePowerConsumption = 2mW
#*.host*.wlan[0].radio.energyConsumer.transmitterTransmittingPowerConsumption = 100mW
#
#*.host*.energyStorageType = "IdealEpEnergyStorage"
#
#*.host*.wlan[0].radio.displayInterferenceRange = false
#*.hostR1.wlan[0].radio.displayCommunicationRange = false
#
#*.visualizer.mediumVisualizer.displaySignals = false
#
##-----------------------------------------------------------------------------
#[Config Wireless09]
#description = Configuring node movements
#extends = Wireless08
#
#*.hostR*.mobilityType = "LinearMobility"
#*.hostR*.mobility.speed = 12mps
#*.hostR*.mobility.angle = 270deg
#
#*.host*.wlan[0].mac.maxQueueSize = 10
#
#*.visualizer.mobilityVisualizer.displayVelocities = true
#*.visualizer.mobilityVisualizer.displayMovementTrails = true
#
##-----------------------------------------------------------------------------
#[Config Wireless10]
#description = Configuring ad-hoc routing (AODV)
#extends = Wireless09
#
#*.configurator.addStaticRoutes = false
#
#*.hostType = "AodvRouter"
#
#*.hostB.wlan[0].radio.displayCommunicationRange = true
#
#*.visualizer.dataLinkVisualizer.packetFilter = "AODV*"
#
##-----------------------------------------------------------------------------
#[Config Wireless11]
#description = Adding obstacles to the environment
#extends = Wireless10
#
#*.host*.mobility.initialZ = 1.7m
#
#*.physicalEnvironment.config = xmldoc("walls.xml")
#*.radioMedium.obstacleLossType = "IdealObstacleLoss"
#
##-----------------------------------------------------------------------------
#[Config Wireless12]
#description = Changing to a more realistic radio model
#extends = Wireless11
#
#*.mediumType = "ApskScalarRadioMedium"
#*.radioMedium.backgroundNoise.power = -90dBm
#*.radioMedium.mediumLimitCache.carrierFrequency = 2GHz
#
#*.host*.wlan[0].radioType = "ApskScalarRadio"
#*.host*.wlan[0].radio.carrierFrequency = 2GHz
#*.host*.wlan[0].radio.bandwidth = 2MHz
#*.host*.wlan[0].radio.transmitter.power = 1.4mW
#*.host*.wlan[0].radio.transmitter.preambleDuration = 10us
#*.host*.wlan[0].radio.transmitter.headerLength = 0b
#*.host*.wlan[0].radio.receiver.sensitivity = -85dBm
#*.host*.wlan[0].radio.receiver.energyDetection = -85dBm
#*.host*.wlan[0].radio.receiver.snirThreshold = 4dB
#
##-----------------------------------------------------------------------------
#[Config Wireless13]
#description = Configuring a more accurate pathloss model
#extends = Wireless12
#
#*.physicalEnvironment.groundType = "FlatGround"
#*.physicalEnvironment.ground.elevation = 0m
#
#*.radioMedium.pathLossType = "TwoRayGroundReflection"
#
##-----------------------------------------------------------------------------
#[Config Wireless14]
#description = Introducing antenna gain
#extends = Wireless13
#
#*.host*.wlan[0].radio.antennaType = "ConstantGainAntenna"
#*.host*.wlan[0].radio.antenna.gain = 3dB
#
##-----------------------------------------------------------------------------
#
